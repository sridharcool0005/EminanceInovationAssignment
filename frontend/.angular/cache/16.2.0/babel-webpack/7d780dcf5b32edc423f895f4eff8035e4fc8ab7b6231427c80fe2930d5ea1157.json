{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  var _class;\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.selectedUser = {\n        fullName: '',\n        email: '',\n        password: ''\n      };\n      this.noAuthHeader = {\n        headers: new HttpHeaders({\n          'NoAuth': 'True'\n        })\n      };\n    }\n    //HttpMethods\n    postUser(user) {\n      return this.http.post(environment.apiBaseUrl + '/register', user, this.noAuthHeader);\n    }\n    login(authCredentials) {\n      return this.http.post(environment.apiBaseUrl + '/authenticate', authCredentials, this.noAuthHeader);\n    }\n    getUserProfile() {\n      return this.http.get(environment.apiBaseUrl + '/userProfile');\n    }\n    getEmployeeDetails() {\n      return this.http.get(environment.apiBaseUrl + '/adminId/10cdf4657149/getEmployess');\n    }\n    createEmployee(data) {\n      return this.http.post(environment.apiBaseUrl + '/adminId/10cdf4657149/createEmployee', data);\n    }\n    editEmployee(data) {\n      return this.http.put(environment.apiBaseUrl + '/adminId/10cdf4657149/updateEmployee', data);\n    }\n    employeeDetails(data) {\n      return this.http.post(environment.apiBaseUrl + '/adminId/10cdf4657149/employeeDetails', data);\n    }\n    deleteEmployee(data) {\n      return this.http.post(environment.apiBaseUrl + '/adminId/10cdf4657149/deleteEmployee', data);\n    }\n    getjsondata() {\n      return this.http.get('https://jsonplaceholder.typicode.com/posts');\n    }\n    getAllProductCategories() {\n      return this.http.get(environment.apiBaseUrl + '/getAllProductCategories');\n    }\n    getProductofCategories(category) {\n      return this.http.get(environment.apiBaseUrl + '/getProductofCategories/' + category);\n    }\n    getproducts() {\n      return this.http.get(environment.apiBaseUrl + '/getproducts');\n    }\n    //Helper Methods\n    setToken(token) {\n      localStorage.setItem('token', token);\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    deleteToken() {\n      localStorage.removeItem('token');\n    }\n    getUserPayload() {\n      var token = this.getToken();\n      if (token) {\n        var userPayload = atob(token.split('.')[1]);\n        return JSON.parse(userPayload);\n      } else return null;\n    }\n    isLoggedIn() {\n      var userPayload = this.getUserPayload();\n      if (userPayload) return userPayload.exp > Date.now() / 1000;else return false;\n    }\n  }\n  _class = UserService;\n  _class.ɵfac = function UserService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}